apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: self-service-template-2
  title: Namespace configuration
  description: Add Kafka, PostgreSQL and ResourceQuota to the namespace
  tags:
    - recommended
    - kafka
    - postgresql
    - quotas
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide Information for required Services
      required:
        - namespace_id
      properties:
        gitops_repo_exists:
          type: boolean
          title: Does GitOps repo already exist?
          description: Was GitOps repo already created (usually on first run of this template)
          default: false
        enable_kafka:
          title: Install Kafka Broker
          type: boolean
          description: Install Kafka Cluster in the namespace
          default: true
        enable_postgres:
          title: Enable PostgreSQL Database
          type: boolean
          default: false
          description: Install PosgreSQL Database in the namespace
        cpu_limit:
          title: Required CPU
          type: integer
          default: 4
          minimum: 1
          maximum: 8
          multipleOf: 1
          description: CPU Required for your namespace (1-4)
        memory_limit:
          title: Memory Limit
          type: integer
          minimum: 1
          maximum: 16
          multipleOf: 1
          default: 8
          description: Memory required for your namespace (1-8)   
        namespace_id:
          title: Namespace
          type: string
          default: my-quarkus-app-dev
          maxLength: 28
          description: Namespace where you want to apply this template

    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-gj9w2.sandbox2270.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-gj9w2.sandbox2270.opentlc.com
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development

  steps:
  
    - id: templateGitopsDeployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.namespace_id }}-self-service.git
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.cluster-gj9w2.sandbox2270.opentlc.com
          namespace: ${{ parameters.namespace_id }}
          repository_host: ${{ parameters.repo.host }}
          user: ${{ user.entity.metadata.name }}
          enable_kafka: ${{ parameters.enable_kafka }}
          enable_postgres:  ${{ parameters.enable_postgres }}
          cpu_limit:  ${{ parameters.cpu_limit }}
          memory_limit:  ${{ parameters.memory_limit }}
        targetPath: ./tenant-gitops

    - id: publishGitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      if: ${{ parameters.gitops_repo_exists == false }}
      input:
        defaultBranch: main
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{ parameters.namespace_id }}-self-service"
        title: gitops resources for ${{ parameters.namespace_id }}
        description: gitops resources for ${{ parameters.namespace_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public 

    - id: commitAndPushToGitops
      name: Pushing to existing GitOps repository
      action: gitlab:repo:push
      if: ${{ parameters.gitops_repo_exists == true }}
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{ parameters.namespace_id }}-self-service"
        branchName: main
        commitMessage: Updating GitOps repository ${{ parameters.namespace_id }}-self-service
        sourcePath: ./tenant-gitops
        commitAction: update

    - id: createArgoCDResources
      name: Create ArgoCD Resources
      if: ${{ parameters.gitops_repo_exists == false }
      action: argocd:create-resources
      input:
        appName: ${{ parameters.namespace_id }}-self-service-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.namespace_id }}-self-service.git
        path: 'argocd/'

  output:
    links:
      - title: GitOps Repository
        url: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.namespace_id }}-self-service.git
